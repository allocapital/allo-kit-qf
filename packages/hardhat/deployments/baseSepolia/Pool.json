{
  "address": "0x59B53E43AA8C5060348F6F01980f286444242dFD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_schema",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "internalType": "struct PoolConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Allocate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Approve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "schema",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct PoolConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Register",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rejecter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Reject",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "updater",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Update",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "_allocate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "_approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "_distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "_register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "_reject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "_update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "config",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "allocationToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "distributionToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "allocationToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributionToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "timestamps",
              "type": "uint64[]"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "internalType": "struct PoolConfig",
          "name": "_config",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registrations",
      "outputs": [
        {
          "internalType": "enum IPool.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1a4a0a8bc68488c8d1d1d4489cfef3442de4ed2dd982f765813e98151bb8f303",
  "receipt": {
    "to": null,
    "from": "0x8595e36857743A1C517e00179e6bA6D170DD1F51",
    "contractAddress": "0x59B53E43AA8C5060348F6F01980f286444242dFD",
    "transactionIndex": 58,
    "gasUsed": "1457213",
    "logsBloom": "0x
    "blockHash": "0xcce2a989ef72e84c9523fae84bf7f3b9209b752d1e1e45ce5a214e4786d45a9f",
    "transactionHash": "0x1a4a0a8bc68488c8d1d1d4489cfef3442de4ed2dd982f765813e98151bb8f303",
    "logs": [
      {
        "transactionIndex": 58,
        "blockNumber": 26626290,
        "transactionHash": "0x1a4a0a8bc68488c8d1d1d4489cfef3442de4ed2dd982f765813e98151bb8f303",
        "address": "0x59B53E43AA8C5060348F6F01980f286444242dFD",
        "topics": [
          "0x432d5e51ce671e91daae7448ef02fde36fd474baf4f93d31ff4ace1ad9a1a6bd",
          "0x0000000000000000000000008595e36857743a1c517e00179e6ba6d170dd1f51"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008595e36857743a1c517e00179e6ba6d170dd1f5100000000000000000000000000000000000000000000000000000000000000e
        "logIndex": 607,
        "blockHash": "0xcce2a989ef72e84c9523fae84bf7f3b9209b752d1e1e45ce5a214e4786d45a9f"
      }
    ],
    "blockNumber": 26626290,
    "cumulativeGasUsed": "26692195",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "",
    "",
    {
      "owner": "0x8595e36857743A1C517e00179e6bA6D170DD1F51",
      "allocationToken": "0x0000000000000000000000000000000000000000",
      "distributionToken": "0x0000000000000000000000000000000000000000",
      "maxAmount": "0",
      "metadataURI": "",
      "admins": [],
      "timestamps": []
    }
  ],
  "numDeployments": 1,
  "solcInputHash": "68abb0f96633951c4834d81434b5b092",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_schema\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Allocate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Approve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct PoolConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rejecter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Reject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"_allocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"_approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"_distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"_register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"_reject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"_update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"config\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"allocationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributionToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"timestamps\",\"type\":\"uint64[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registrations\",\"outputs\":[{\"internalType\":\"enum IPool.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/Pool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nstruct PoolConfig {\\n    address owner;\\n    address[] admins;\\n    address allocationToken;\\n    address distributionToken;\\n    uint256 maxAmount;\\n    uint64[] timestamps;\\n    string metadataURI;\\n}\\n\\ninterface IPool {\\n    enum Status {\\n        pending,\\n        approved,\\n        rejected\\n    }\\n\\n    struct Registration {\\n        Status status;\\n        address owner;\\n        string metadataURI;\\n        bytes data; // Data can contain information that can be accessed later\\n    }\\n\\n    event Deployed(string name, address indexed owner, string schema, PoolConfig config);\\n    event Allocate(address indexed from, address indexed to, uint256 amount, address token, bytes data);\\n    event Register(address indexed project, address indexed owner, string metadataURI, bytes data);\\n    event Approve(address indexed project, address indexed approver, string metadataURI, bytes data);\\n    event Reject(address indexed project, address indexed rejecter, string metadataURI, bytes data);\\n    event Update(address indexed project, address indexed updater, string metadataURI, bytes data);\\n\\n\\n    function initialize(PoolConfig memory config, bytes memory data) external;\\n\\n    function _register(address project, string memory metadataURI, bytes memory data) external;\\n    function _update(address project, string memory metadataURI, bytes memory data) external;\\n    function _approve(address project, string memory metadataURI, bytes memory data) external;\\n    function _allocate(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        external;\\n    function _distribute(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        external;\\n}\\n\\n/*\\nTypes of Pools:\\nDirectGrants - pool manager transfer funds directly to projects\\nRetroFunding - selected voters vote on projects and pool gets distributed based on the votes\\nQuadraticFunding - people vote with money tokens and get matching funds from the pool based on quadratic formula\\nDedicatedDomainAllocation - selected panel of domain experts decide what projects receive matching funds\\nRFPs\\nBounties\\nCrowdfunding\\n*/\\ncontract Pool is IPool {\\n    bool private _initialized;\\n    PoolConfig public config;\\n\\n    mapping(address => Registration) public registrations;\\n\\n\\n    constructor(string memory _name, string memory _schema, PoolConfig memory _config) {\\n        // strategyName = _name;\\n        // schema = _schema;\\n        // metadataURI = _metadataURI;\\n        // id = keccak256(abi.encode(strategyName));\\n        emit Deployed(_name, msg.sender, _schema, _config);\\n    }\\n\\n\\n  function initialize(PoolConfig memory _config, bytes memory ) external virtual {\\n    require(!_initialized, \\\"Already initialized\\\");\\n    _initialized = true;\\n    config = _config;\\n  }\\n\\n    // MetadataURI contain details about project application\\n    function _register(address project, string memory _metadataURI, bytes memory data) public {\\n        require(registrations[project].owner == address(0), \\\"Already registered\\\");\\n        registrations[project] = Registration(Status.pending, msg.sender, _metadataURI, data);\\n        emit Register(project, msg.sender, _metadataURI, data);\\n    }\\n\\n    function _reject(address project, string memory _metadataURI, bytes memory data) public virtual {\\n        Registration storage registration = registrations[project];\\n        require(registration.status == Status.pending || registration.status == Status.approved, \\\"Already deregistered\\\");\\n        registration.status = Status.rejected;\\n        emit Reject(project, msg.sender, _metadataURI, data);\\n    }\\n\\n    // MetadataURI can contain Review information\\n    function _approve(address project, string memory _metadataURI, bytes memory data) public virtual {\\n        Registration storage registration = registrations[project];\\n        require(registration.status == Status.pending, \\\"Already approved or not registered yet\\\");\\n        registration.status = Status.approved;\\n        // MetadataURI here is Review information so we don't need to store it\\n        emit Approve(project, msg.sender, _metadataURI, data);\\n    }\\n\\n    function _update(address project, string memory _metadataURI, bytes memory data) public {\\n        require(registrations[project].status == Status.pending, \\\"Already approved or not registered yet\\\");\\n        require(registrations[project].owner == msg.sender, \\\"Must be owner to update\\\");\\n        registrations[project].metadataURI = _metadataURI;\\n        registrations[project].data = data;\\n        emit Update(project, msg.sender, _metadataURI, data);\\n    }\\n\\n    // Allocate tokens to recipients (transfers tokens from caller to recipients)\\n    // This can be used to transfer tokens to projects, or the contract itself to fund with matching funds for example\\n    function _allocate(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        public\\n        virtual\\n    {\\n        uint256 length = recipients.length;\\n        require(length > 0 && length == amounts.length, \\\"Mismatched lengths\\\");\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            bytes memory _data = i < data.length ? data[i] : bytes(\\\"\\\");\\n            require(recipients[i] != address(0), \\\"Recipient is zero address\\\");\\n            require(amounts[i] > 0, \\\"Amount is zero\\\");\\n            _beforeAllocate(recipients[i], amounts[i], token, _data);\\n            IERC20(token).transferFrom(msg.sender, recipients[i], amounts[i]);\\n            emit Allocate(msg.sender, recipients[i], amounts[i], token, _data);\\n        }\\n    }\\n\\n    // Distribute tokens to recipients (transfers tokens from the contract to recipients)\\n    // Can be used to distribute matching funds to projects\\n    function _distribute(address[] memory recipients, uint256[] memory amounts, address token, bytes[] memory data)\\n        public\\n        virtual\\n    {\\n        uint256 length = recipients.length;\\n        require(length > 0 && length == amounts.length, \\\"Mismatched lengths\\\");\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            bytes memory _data = i < data.length ? data[i] : bytes(\\\"\\\");\\n            require(recipients[i] != address(0), \\\"Recipient is zero address\\\");\\n            require(\\n                amounts[i] > 0 && amounts[i] <= IERC20(token).balanceOf(address(this)),\\n                \\\"Amount is zero or exceeds balance\\\"\\n            );\\n            _beforeDistribute(recipients[i], amounts[i], token, _data);\\n            IERC20(token).transfer(recipients[i], amounts[i]);\\n            emit Allocate(address(this), recipients[i], amounts[i], token, _data);\\n        }\\n    }\\n\\n    function _beforeAllocate(address recipient, uint256 amount, address token, bytes memory data) internal virtual {}\\n    function _beforeDistribute(address recipient, uint256 amount, address token, bytes memory data) internal virtual {}\\n}\\n\",\"keccak256\":\"0xe466d05ffdf3fcdafdde429322767a3f60a3890c07f6e7c8e5808fba90d44d81\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001e8438038062001e848339810160408190526200003491620002ca565b336001600160a01b03167f432d5e51ce671e91daae7448ef02fde36fd474baf4f93d31ff4ace1ad9a1a6bd848484604051620000739392919062000494565b60405180910390a2505050620005a8565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620000bf57620000bf62000084565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620000f057620000f062000084565b604052919050565b60005b8381101562000115578181015183820152602001620000fb565b50506000910152565b600082601f8301126200013057600080fd5b81516001600160401b038111156200014c576200014c62000084565b62000161601f8201601f1916602001620000c5565b8181528460208386010111156200017757600080fd5b6200018a826020830160208701620000f8565b949350505050565b80516001600160a01b0381168114620001aa57600080fd5b919050565b60006001600160401b03821115620001cb57620001cb62000084565b5060051b60200190565b600082601f830112620001e757600080fd5b8151602062000200620001fa83620001af565b620000c5565b82815260059290921b840181019181810190868411156200022057600080fd5b8286015b848110156200024657620002388162000192565b835291830191830162000224565b509695505050505050565b600082601f8301126200026357600080fd5b8151602062000276620001fa83620001af565b82815260059290921b840181019181810190868411156200029657600080fd5b8286015b84811015620002465780516001600160401b0381168114620002bc5760008081fd5b83529183019183016200029a565b600080600060608486031215620002e057600080fd5b83516001600160401b0380821115620002f857600080fd5b62000306878388016200011e565b945060208601519150808211156200031d57600080fd5b6200032b878388016200011e565b935060408601519150808211156200034257600080fd5b9085019060e082880312156200035757600080fd5b620003616200009a565b6200036c8362000192565b81526020830151828111156200038157600080fd5b6200038f89828601620001d5565b602083015250620003a36040840162000192565b6040820152620003b66060840162000192565b60608201526080830151608082015260a083015182811115620003d857600080fd5b620003e68982860162000251565b60a08301525060c083015182811115620003ff57600080fd5b6200040d898286016200011e565b60c0830152508093505050509250925092565b600081518084526200043a816020860160208601620000f8565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015620004895781516001600160401b03168752958201959082019060010162000462565b509495945050505050565b606081526000620004a9606083018662000420565b602083820381850152620004be828762000420565b848103604086015285516001600160a01b0390811682528287015160e084840181905281519084018190529294508301916000906101008601905b808310156200051d57845184168252938501936001929092019190850190620004f9565b50604089015194506200053b60408701866001600160a01b03169052565b606089015194506200055860608701866001600160a01b03169052565b6080890151608087015260a0890151945085810360a08701526200057d81866200044e565b94505050505060c085015182820360c08401526200059c828262000420565b98975050505050505050565b6118cc80620005b86000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806379b881af1161006657806379b881af146100f5578063942e6bcf146101085780639cdd2f9a1461012b578063ab21f5071461013e578063f2e330d81461015157600080fd5b80632628fb1c146100985780635cf90985146100ad5780635e5de151146100c057806379502c55146100d3575b600080fd5b6100ab6100a636600461123d565b610164565b005b6100ab6100bb36600461132a565b610500565b6100ab6100ce36600461132a565b610656565b6100db610741565b6040516100ec9594939291906113e3565b60405180910390f35b6100ab61010336600461132a565b6107f4565b61011b610116366004611429565b61094b565b6040516100ec9493929190611461565b6100ab61013936600461123d565b610a92565b6100ab61014c36600461152b565b610d65565b6100ab61015f36600461132a565b610e71565b835180158015906101755750835181145b6101bb5760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064015b60405180910390fd5b60005b818110156104f8576000835182106101e55760405180602001604052806000815250610200565b8382815181106101f7576101f7611641565b60200260200101515b905060006001600160a01b031687838151811061021f5761021f611641565b60200260200101516001600160a01b0316036102795760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016101b2565b600086838151811061028d5761028d611641565b602002602001015111801561032257506040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190611657565b86838151811061031757610317611641565b602002602001015111155b6103785760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206973207a65726f206f7220657863656564732062616c616e636044820152606560f81b60648201526084016101b2565b6103ac87838151811061038d5761038d611641565b60200260200101518784815181106103a7576103a7611641565b505050565b846001600160a01b031663a9059cbb8884815181106103cd576103cd611641565b60200260200101518885815181106103e7576103e7611641565b60200260200101516040518363ffffffff1660e01b81526004016104209291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190611670565b5086828151811061047657610476611641565b60200260200101516001600160a01b0316306001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b758885815181106104c4576104c4611641565b602002602001015188856040516104dd93929190611692565b60405180910390a350806104f0816116c5565b9150506101be565b505050505050565b6001600160a01b03831660009081526008602052604081205460ff16600281111561052d5761052d61144b565b1461054a5760405162461bcd60e51b81526004016101b2906116ec565b6001600160a01b0383811660009081526008602052604090205461010090041633146105b85760405162461bcd60e51b815260206004820152601760248201527f4d757374206265206f776e657220746f2075706461746500000000000000000060448201526064016101b2565b6001600160a01b03831660009081526008602052604090206001016105dd83826117b2565b506001600160a01b038316600090815260086020526040902060020161060382826117b2565b50336001600160a01b0316836001600160a01b03167f639b764af06689bf35c6ebc1ae49051aa4b4d3a3d34d5c70bf8626087352e99d8484604051610649929190611871565b60405180910390a3505050565b6001600160a01b038316600090815260086020526040812090815460ff1660028111156106855761068561144b565b14806106a657506001815460ff1660028111156106a4576106a461144b565b145b6106e95760405162461bcd60e51b8152602060048201526014602482015273105b1c9958591e4819195c9959da5cdd195c995960621b60448201526064016101b2565b805460ff1916600217815560405133906001600160a01b038616907f11d876319772a42984e532feb89f8d20206a23ba4b556142b7cdfc277efc8435906107339087908790611871565b60405180910390a350505050565b60018054600354600454600554600780546001600160a01b03958616969486169590931693919261077190611732565b80601f016020809104026020016040519081016040528092919081815260200182805461079d90611732565b80156107ea5780601f106107bf576101008083540402835291602001916107ea565b820191906000526020600020905b8154815290600101906020018083116107cd57829003601f168201915b5050505050905085565b6001600160a01b03838116600090815260086020526040902054610100900416156108565760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016101b2565b60408051608081018252600080825233602080840191909152828401869052606083018590526001600160a01b0387168252600890529190912081518154829060ff191660018360028111156108ae576108ae61144b565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b0319909116178155604082015160018201906108ed90826117b2565b506060820151600282019061090290826117b2565b50905050336001600160a01b0316836001600160a01b03167f99202cc5abf24650e7ac53e3a81ff614768dcc7569a245376ed82eb4ce243fca8484604051610649929190611871565b6008602052600090815260409020805460018201805460ff8316936101009093046001600160a01b031692919061098190611732565b80601f01602080910402602001604051908101604052809291908181526020018280546109ad90611732565b80156109fa5780601f106109cf576101008083540402835291602001916109fa565b820191906000526020600020905b8154815290600101906020018083116109dd57829003601f168201915b505050505090806002018054610a0f90611732565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3b90611732565b8015610a885780601f10610a5d57610100808354040283529160200191610a88565b820191906000526020600020905b815481529060010190602001808311610a6b57829003601f168201915b5050505050905084565b83518015801590610aa35750835181145b610ae45760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016101b2565b60005b818110156104f857600083518210610b0e5760405180602001604052806000815250610b29565b838281518110610b2057610b20611641565b60200260200101515b905060006001600160a01b0316878381518110610b4857610b48611641565b60200260200101516001600160a01b031603610ba25760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016101b2565b6000868381518110610bb657610bb6611641565b602002602001015111610bfc5760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016101b2565b610c1187838151811061038d5761038d611641565b846001600160a01b03166323b872dd33898581518110610c3357610c33611641565b6020026020010151898681518110610c4d57610c4d611641565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd09190611670565b50868281518110610ce357610ce3611641565b60200260200101516001600160a01b0316336001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b75888581518110610d3157610d31611641565b60200260200101518885604051610d4a93929190611692565b60405180910390a35080610d5d816116c5565b915050610ae7565b60005460ff1615610dae5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016101b2565b60008054600160ff199091168117909155825181546001600160a01b0319166001600160a01b039091161781556020808401518051859392610df592600292910190610f07565b5060408201516002820180546001600160a01b039283166001600160a01b03199182161790915560608401516003840180549190931691161790556080820151600482015560a08201518051610e55916005840191602090910190610f6c565b5060c08201516006820190610e6a90826117b2565b5050505050565b6001600160a01b038316600090815260086020526040812090815460ff166002811115610ea057610ea061144b565b14610ebd5760405162461bcd60e51b81526004016101b2906116ec565b805460ff1916600117815560405133906001600160a01b038616907f07597d52fbe13ba7ca9294f77eecd20c5d40bcd8752753651f416e64a0f7d77c906107339087908790611871565b828054828255906000526020600020908101928215610f5c579160200282015b82811115610f5c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610f27565b50610f6892915061101b565b5090565b82805482825590600052602060002090600301600490048101928215610f5c5791602002820160005b83821115610fdf57835183826101000a8154816001600160401b0302191690836001600160401b031602179055509260200192600801602081600701049283019260010302610f95565b80156110125782816101000a8154906001600160401b030219169055600801602081600701049283019260010302610fdf565b5050610f689291505b5b80821115610f68576000815560010161101c565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b038111828210171561106857611068611030565b60405290565b604051601f8201601f191681016001600160401b038111828210171561109657611096611030565b604052919050565b60006001600160401b038211156110b7576110b7611030565b5060051b60200190565b80356001600160a01b03811681146110d857600080fd5b919050565b600082601f8301126110ee57600080fd5b813560206111036110fe8361109e565b61106e565b82815260059290921b8401810191818101908684111561112257600080fd5b8286015b8481101561114457611137816110c1565b8352918301918301611126565b509695505050505050565b600082601f83011261116057600080fd5b81356001600160401b0381111561117957611179611030565b61118c601f8201601f191660200161106e565b8181528460208386010111156111a157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126111cf57600080fd5b813560206111df6110fe8361109e565b82815260059290921b840181019181810190868411156111fe57600080fd5b8286015b848110156111445780356001600160401b038111156112215760008081fd5b61122f8986838b010161114f565b845250918301918301611202565b6000806000806080858703121561125357600080fd5b84356001600160401b038082111561126a57600080fd5b611276888389016110dd565b955060209150818701358181111561128d57600080fd5b8701601f8101891361129e57600080fd5b80356112ac6110fe8261109e565b81815260059190911b8201840190848101908b8311156112cb57600080fd5b928501925b828410156112e9578335825292850192908501906112d0565b97506112fb92505050604088016110c1565b9350606087013591508082111561131157600080fd5b5061131e878288016111be565b91505092959194509250565b60008060006060848603121561133f57600080fd5b611348846110c1565b925060208401356001600160401b038082111561136457600080fd5b6113708783880161114f565b9350604086013591508082111561138657600080fd5b506113938682870161114f565b9150509250925092565b6000815180845260005b818110156113c3576020818501810151868301820152016113a7565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a06080820181905260009061141e9083018461139d565b979650505050505050565b60006020828403121561143b57600080fd5b611444826110c1565b9392505050565b634e487b7160e01b600052602160045260246000fd5b60006003861061148157634e487b7160e01b600052602160045260246000fd5b8582526001600160a01b03851660208301526080604083018190526114a89083018561139d565b828103606084015261141e818561139d565b600082601f8301126114cb57600080fd5b813560206114db6110fe8361109e565b82815260059290921b840181019181810190868411156114fa57600080fd5b8286015b848110156111445780356001600160401b038116811461151e5760008081fd5b83529183019183016114fe565b6000806040838503121561153e57600080fd5b82356001600160401b038082111561155557600080fd5b9084019060e0828703121561156957600080fd5b611571611046565b61157a836110c1565b815260208301358281111561158e57600080fd5b61159a888286016110dd565b6020830152506115ac604084016110c1565b60408201526115bd606084016110c1565b60608201526080830135608082015260a0830135828111156115de57600080fd5b6115ea888286016114ba565b60a08301525060c08301358281111561160257600080fd5b61160e8882860161114f565b60c0830152509350602085013591508082111561162a57600080fd5b506116378582860161114f565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561166957600080fd5b5051919050565b60006020828403121561168257600080fd5b8151801515811461144457600080fd5b8381526001600160a01b03831660208201526060604082018190526000906116bc9083018461139d565b95945050505050565b6000600182016116e557634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526026908201527f416c726561647920617070726f766564206f72206e6f742072656769737465726040820152651959081e595d60d21b606082015260800190565b600181811c9082168061174657607f821691505b60208210810361176657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103a757600081815260208120601f850160051c810160208610156117935750805b601f850160051c820191505b818110156104f85782815560010161179f565b81516001600160401b038111156117cb576117cb611030565b6117df816117d98454611732565b8461176c565b602080601f83116001811461181457600084156117fc5750858301515b600019600386901b1c1916600185901b1785556104f8565b600085815260208120601f198616915b8281101561184357888601518255948401946001909101908401611824565b50858210156118615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611884604083018561139d565b82810360208401526116bc818561139d56fea2646970667358221220e9f72837644426be52bf2c3d9297625fd942cb893f60a8cc68f0b76e14c56f7964736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806379b881af1161006657806379b881af146100f5578063942e6bcf146101085780639cdd2f9a1461012b578063ab21f5071461013e578063f2e330d81461015157600080fd5b80632628fb1c146100985780635cf90985146100ad5780635e5de151146100c057806379502c55146100d3575b600080fd5b6100ab6100a636600461123d565b610164565b005b6100ab6100bb36600461132a565b610500565b6100ab6100ce36600461132a565b610656565b6100db610741565b6040516100ec9594939291906113e3565b60405180910390f35b6100ab61010336600461132a565b6107f4565b61011b610116366004611429565b61094b565b6040516100ec9493929190611461565b6100ab61013936600461123d565b610a92565b6100ab61014c36600461152b565b610d65565b6100ab61015f36600461132a565b610e71565b835180158015906101755750835181145b6101bb5760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064015b60405180910390fd5b60005b818110156104f8576000835182106101e55760405180602001604052806000815250610200565b8382815181106101f7576101f7611641565b60200260200101515b905060006001600160a01b031687838151811061021f5761021f611641565b60200260200101516001600160a01b0316036102795760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016101b2565b600086838151811061028d5761028d611641565b602002602001015111801561032257506040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190611657565b86838151811061031757610317611641565b602002602001015111155b6103785760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206973207a65726f206f7220657863656564732062616c616e636044820152606560f81b60648201526084016101b2565b6103ac87838151811061038d5761038d611641565b60200260200101518784815181106103a7576103a7611641565b505050565b846001600160a01b031663a9059cbb8884815181106103cd576103cd611641565b60200260200101518885815181106103e7576103e7611641565b60200260200101516040518363ffffffff1660e01b81526004016104209291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190611670565b5086828151811061047657610476611641565b60200260200101516001600160a01b0316306001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b758885815181106104c4576104c4611641565b602002602001015188856040516104dd93929190611692565b60405180910390a350806104f0816116c5565b9150506101be565b505050505050565b6001600160a01b03831660009081526008602052604081205460ff16600281111561052d5761052d61144b565b1461054a5760405162461bcd60e51b81526004016101b2906116ec565b6001600160a01b0383811660009081526008602052604090205461010090041633146105b85760405162461bcd60e51b815260206004820152601760248201527f4d757374206265206f776e657220746f2075706461746500000000000000000060448201526064016101b2565b6001600160a01b03831660009081526008602052604090206001016105dd83826117b2565b506001600160a01b038316600090815260086020526040902060020161060382826117b2565b50336001600160a01b0316836001600160a01b03167f639b764af06689bf35c6ebc1ae49051aa4b4d3a3d34d5c70bf8626087352e99d8484604051610649929190611871565b60405180910390a3505050565b6001600160a01b038316600090815260086020526040812090815460ff1660028111156106855761068561144b565b14806106a657506001815460ff1660028111156106a4576106a461144b565b145b6106e95760405162461bcd60e51b8152602060048201526014602482015273105b1c9958591e4819195c9959da5cdd195c995960621b60448201526064016101b2565b805460ff1916600217815560405133906001600160a01b038616907f11d876319772a42984e532feb89f8d20206a23ba4b556142b7cdfc277efc8435906107339087908790611871565b60405180910390a350505050565b60018054600354600454600554600780546001600160a01b03958616969486169590931693919261077190611732565b80601f016020809104026020016040519081016040528092919081815260200182805461079d90611732565b80156107ea5780601f106107bf576101008083540402835291602001916107ea565b820191906000526020600020905b8154815290600101906020018083116107cd57829003601f168201915b5050505050905085565b6001600160a01b03838116600090815260086020526040902054610100900416156108565760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016101b2565b60408051608081018252600080825233602080840191909152828401869052606083018590526001600160a01b0387168252600890529190912081518154829060ff191660018360028111156108ae576108ae61144b565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b0319909116178155604082015160018201906108ed90826117b2565b506060820151600282019061090290826117b2565b50905050336001600160a01b0316836001600160a01b03167f99202cc5abf24650e7ac53e3a81ff614768dcc7569a245376ed82eb4ce243fca8484604051610649929190611871565b6008602052600090815260409020805460018201805460ff8316936101009093046001600160a01b031692919061098190611732565b80601f01602080910402602001604051908101604052809291908181526020018280546109ad90611732565b80156109fa5780601f106109cf576101008083540402835291602001916109fa565b820191906000526020600020905b8154815290600101906020018083116109dd57829003601f168201915b505050505090806002018054610a0f90611732565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3b90611732565b8015610a885780601f10610a5d57610100808354040283529160200191610a88565b820191906000526020600020905b815481529060010190602001808311610a6b57829003601f168201915b5050505050905084565b83518015801590610aa35750835181145b610ae45760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b60448201526064016101b2565b60005b818110156104f857600083518210610b0e5760405180602001604052806000815250610b29565b838281518110610b2057610b20611641565b60200260200101515b905060006001600160a01b0316878381518110610b4857610b48611641565b60200260200101516001600160a01b031603610ba25760405162461bcd60e51b8152602060048201526019602482015278526563697069656e74206973207a65726f206164647265737360381b60448201526064016101b2565b6000868381518110610bb657610bb6611641565b602002602001015111610bfc5760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016101b2565b610c1187838151811061038d5761038d611641565b846001600160a01b03166323b872dd33898581518110610c3357610c33611641565b6020026020010151898681518110610c4d57610c4d611641565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd09190611670565b50868281518110610ce357610ce3611641565b60200260200101516001600160a01b0316336001600160a01b03167f68179208818f375bd941a067e321c35e8cebc048007cd126acd94625989a7b75888581518110610d3157610d31611641565b60200260200101518885604051610d4a93929190611692565b60405180910390a35080610d5d816116c5565b915050610ae7565b60005460ff1615610dae5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016101b2565b60008054600160ff199091168117909155825181546001600160a01b0319166001600160a01b039091161781556020808401518051859392610df592600292910190610f07565b5060408201516002820180546001600160a01b039283166001600160a01b03199182161790915560608401516003840180549190931691161790556080820151600482015560a08201518051610e55916005840191602090910190610f6c565b5060c08201516006820190610e6a90826117b2565b5050505050565b6001600160a01b038316600090815260086020526040812090815460ff166002811115610ea057610ea061144b565b14610ebd5760405162461bcd60e51b81526004016101b2906116ec565b805460ff1916600117815560405133906001600160a01b038616907f07597d52fbe13ba7ca9294f77eecd20c5d40bcd8752753651f416e64a0f7d77c906107339087908790611871565b828054828255906000526020600020908101928215610f5c579160200282015b82811115610f5c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610f27565b50610f6892915061101b565b5090565b82805482825590600052602060002090600301600490048101928215610f5c5791602002820160005b83821115610fdf57835183826101000a8154816001600160401b0302191690836001600160401b031602179055509260200192600801602081600701049283019260010302610f95565b80156110125782816101000a8154906001600160401b030219169055600801602081600701049283019260010302610fdf565b5050610f689291505b5b80821115610f68576000815560010161101c565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b038111828210171561106857611068611030565b60405290565b604051601f8201601f191681016001600160401b038111828210171561109657611096611030565b604052919050565b60006001600160401b038211156110b7576110b7611030565b5060051b60200190565b80356001600160a01b03811681146110d857600080fd5b919050565b600082601f8301126110ee57600080fd5b813560206111036110fe8361109e565b61106e565b82815260059290921b8401810191818101908684111561112257600080fd5b8286015b8481101561114457611137816110c1565b8352918301918301611126565b509695505050505050565b600082601f83011261116057600080fd5b81356001600160401b0381111561117957611179611030565b61118c601f8201601f191660200161106e565b8181528460208386010111156111a157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126111cf57600080fd5b813560206111df6110fe8361109e565b82815260059290921b840181019181810190868411156111fe57600080fd5b8286015b848110156111445780356001600160401b038111156112215760008081fd5b61122f8986838b010161114f565b845250918301918301611202565b6000806000806080858703121561125357600080fd5b84356001600160401b038082111561126a57600080fd5b611276888389016110dd565b955060209150818701358181111561128d57600080fd5b8701601f8101891361129e57600080fd5b80356112ac6110fe8261109e565b81815260059190911b8201840190848101908b8311156112cb57600080fd5b928501925b828410156112e9578335825292850192908501906112d0565b97506112fb92505050604088016110c1565b9350606087013591508082111561131157600080fd5b5061131e878288016111be565b91505092959194509250565b60008060006060848603121561133f57600080fd5b611348846110c1565b925060208401356001600160401b038082111561136457600080fd5b6113708783880161114f565b9350604086013591508082111561138657600080fd5b506113938682870161114f565b9150509250925092565b6000815180845260005b818110156113c3576020818501810151868301820152016113a7565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a06080820181905260009061141e9083018461139d565b979650505050505050565b60006020828403121561143b57600080fd5b611444826110c1565b9392505050565b634e487b7160e01b600052602160045260246000fd5b60006003861061148157634e487b7160e01b600052602160045260246000fd5b8582526001600160a01b03851660208301526080604083018190526114a89083018561139d565b828103606084015261141e818561139d565b600082601f8301126114cb57600080fd5b813560206114db6110fe8361109e565b82815260059290921b840181019181810190868411156114fa57600080fd5b8286015b848110156111445780356001600160401b038116811461151e5760008081fd5b83529183019183016114fe565b6000806040838503121561153e57600080fd5b82356001600160401b038082111561155557600080fd5b9084019060e0828703121561156957600080fd5b611571611046565b61157a836110c1565b815260208301358281111561158e57600080fd5b61159a888286016110dd565b6020830152506115ac604084016110c1565b60408201526115bd606084016110c1565b60608201526080830135608082015260a0830135828111156115de57600080fd5b6115ea888286016114ba565b60a08301525060c08301358281111561160257600080fd5b61160e8882860161114f565b60c0830152509350602085013591508082111561162a57600080fd5b506116378582860161114f565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561166957600080fd5b5051919050565b60006020828403121561168257600080fd5b8151801515811461144457600080fd5b8381526001600160a01b03831660208201526060604082018190526000906116bc9083018461139d565b95945050505050565b6000600182016116e557634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526026908201527f416c726561647920617070726f766564206f72206e6f742072656769737465726040820152651959081e595d60d21b606082015260800190565b600181811c9082168061174657607f821691505b60208210810361176657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103a757600081815260208120601f850160051c810160208610156117935750805b601f850160051c820191505b818110156104f85782815560010161179f565b81516001600160401b038111156117cb576117cb611030565b6117df816117d98454611732565b8461176c565b602080601f83116001811461181457600084156117fc5750858301515b600019600386901b1c1916600185901b1785556104f8565b600085815260208120601f198616915b8281101561184357888601518255948401946001909101908401611824565b50858210156118615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611884604083018561139d565b82810360208401526116bc818561139d56fea2646970667358221220e9f72837644426be52bf2c3d9297625fd942cb893f60a8cc68f0b76e14c56f7964736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1421,
        "contract": "contracts/Pool.sol:Pool",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1424,
        "contract": "contracts/Pool.sol:Pool",
        "label": "config",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(PoolConfig)1276_storage"
      },
      {
        "astId": 1429,
        "contract": "contracts/Pool.sol:Pool",
        "label": "registrations",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Registration)1290_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint64)dyn_storage": {
        "base": "t_uint64",
        "encoding": "dynamic_array",
        "label": "uint64[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(Status)1280": {
        "encoding": "inplace",
        "label": "enum IPool.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Registration)1290_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IPool.Registration)",
        "numberOfBytes": "32",
        "value": "t_struct(Registration)1290_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PoolConfig)1276_storage": {
        "encoding": "inplace",
        "label": "struct PoolConfig",
        "members": [
          {
            "astId": 1261,
            "contract": "contracts/Pool.sol:Pool",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1264,
            "contract": "contracts/Pool.sol:Pool",
            "label": "admins",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1266,
            "contract": "contracts/Pool.sol:Pool",
            "label": "allocationToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 1268,
            "contract": "contracts/Pool.sol:Pool",
            "label": "distributionToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 1270,
            "contract": "contracts/Pool.sol:Pool",
            "label": "maxAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1273,
            "contract": "contracts/Pool.sol:Pool",
            "label": "timestamps",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint64)dyn_storage"
          },
          {
            "astId": 1275,
            "contract": "contracts/Pool.sol:Pool",
            "label": "metadataURI",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Registration)1290_storage": {
        "encoding": "inplace",
        "label": "struct IPool.Registration",
        "members": [
          {
            "astId": 1283,
            "contract": "contracts/Pool.sol:Pool",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(Status)1280"
          },
          {
            "astId": 1285,
            "contract": "contracts/Pool.sol:Pool",
            "label": "owner",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1287,
            "contract": "contracts/Pool.sol:Pool",
            "label": "metadataURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1289,
            "contract": "contracts/Pool.sol:Pool",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}